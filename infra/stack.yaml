AWSTemplateFormatVersion: '2010-09-09'
Description: 'The main stack for CiviForm.'
Parameters:
  Timestamp:
    Description: Current timestamp in seconds.
    Type: Number
  DBUsername:
    Description: The name of the database user.
    Type: String
    Default: civiform
  DomainName:
    Description: The domain name (with or without trailing .).
    Type: String
    Default: seattle.civiform.com
  # Not in the stack because it requires external configuration.
  HostedZoneId:
    Description: The IDÂ of the (already existing) Route53 hosted zone.
    Type: String
    Default: Z02860647AHUYUQTEAPO
Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/network.yaml'
  Filestore:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/filestorage.yaml'
      Parameters:
        S3VPCEndpoint: !GetAtt 'VPC.Outputs.S3Endpoint'
  Secrets:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/secrets.yaml'
  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/security_groups.yaml'
      Parameters:
        VPCId: !GetAtt 'VPC.Outputs.VPCId'
  LB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/load_balancer.yaml'
      Parameters:
        VPCId: !GetAtt 'VPC.Outputs.VPCId'
        PublicSubnet1: !GetAtt 'VPC.Outputs.PublicSubnet1'
        PublicSubnet2: !GetAtt 'VPC.Outputs.PublicSubnet2'
        LBSecurityGroup: !GetAtt 'SecurityGroups.Outputs.LbGroup'
        DomainName: !Ref DomainName
        HostedZoneId: !Ref HostedZoneId
  DB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/database.yaml'
      Parameters:
        DBUsername: !Ref DBUsername
        DBPassword: !GetAtt 'Secrets.Outputs.Password'
        DBSecurityGroup: !GetAtt 'SecurityGroups.Outputs.DatabaseGroup'
        PrivateSubnet1: !GetAtt 'VPC.Outputs.PrivateSubnet1'
        PrivateSubnet2: !GetAtt 'VPC.Outputs.PrivateSubnet2'
  Container:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/containers.yaml'
      Parameters:
        DBUsername: !Ref DBUsername
        DBPassword: !GetAtt 'Secrets.Outputs.Password'
        DBAddress: !GetAtt 'DB.Outputs.DBAddress'
        DBPort: !GetAtt 'DB.Outputs.DBPort'
        SecretKey: !GetAtt 'Secrets.Outputs.Key'
        PrivateSubnet1: !GetAtt 'VPC.Outputs.PrivateSubnet1'
        PrivateSubnet2: !GetAtt 'VPC.Outputs.PrivateSubnet2'
        LBTargetName: !GetAtt 'LB.Outputs.LBTarget'
        ContainerSecurityGroup: !GetAtt 'SecurityGroups.Outputs.ContainerGroup'
        S3BucketName: !GetAtt 'Filestore.Outputs.bucketname'
        DomainName: !Ref DomainName
  Monitoring:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/seattle-civiform-cftmpl/${Timestamp}/monitoring.yaml'
      Parameters:
        DBName: !GetAtt 'DB.Outputs.DBName'
        LBName: !GetAtt 'LB.Outputs.LBFullName'
        LBTGName: !GetAtt 'LB.Outputs.TGFullName'
Outputs:
  ECSService:
    Description: The ARN of the service.
    Value: !GetAtt 'Container.Outputs.ECSService'
  ECSCluster:
    Description: The ARN of the cluster.
    Value: !GetAtt 'Container.Outputs.ECSCluster'
